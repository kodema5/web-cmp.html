{
  "version": 3,
  "sources": ["src/template.js", "src/web-cmp.js", "src/css.js", "src/el.js"],
  "sourcesContent": ["// template is for rendering html\r\nexport class Template {\r\n\r\n    static templateId = 0\r\n\r\n    constructor (strings, keys) {\r\n        this.strings = strings\r\n        this.keys = keys\r\n\r\n        this.templateId = 'web-cmp-' + (++Template.templateId)\r\n        this.template = null\r\n        this.dom = null // last dom\r\n\r\n        this.fnId = 0\r\n        this.functions = {}\r\n    }\r\n\r\n    get content() {\r\n        return (this.template ?? this.build()).content\r\n    }\r\n\r\n    build() {\r\n        let me = this\r\n        let s = me.strings.map((s, i) => {\r\n\r\n            let fn = me.keys[i]\r\n            if (!fn) return s\r\n\r\n            if (typeof fn!=='function') {\r\n                return [s, fn]\r\n            }\r\n\r\n            // store reactive-functions\r\n            //\r\n            let id = this.getFnId()\r\n            this.functions[id] = fn\r\n\r\n            let a = fn.call(me.context, me.context)\r\n            let content = a instanceof Template\r\n                ? a.innerHTML\r\n                : a\r\n\r\n            return [\r\n                s,\r\n                // tag function output for refresh\r\n                //\r\n                '<!--', id, '-->',\r\n                content,\r\n                '<!--\\\\', id, '-->',\r\n                ]\r\n        })\r\n        .flat()\r\n        .filter(Boolean)\r\n        .join('')\r\n\r\n\r\n        let t = Template.create(s)\r\n        this.template = t\r\n        return t\r\n    }\r\n\r\n    getFnId() {\r\n        return this.templateId + '-' + (++this.fnId)\r\n    }\r\n\r\n    get innerHTML() {\r\n        let a = document.createElement('div')\r\n        a.appendChild(this.content.cloneNode(true))\r\n        return a.innerHTML\r\n    }\r\n\r\n    static create = (s) => {\r\n        let t = document.createElement('template')\r\n        t.innerHTML = s\r\n        return t\r\n    }\r\n\r\n    refresh(ctx=null, dom) {\r\n        dom = dom ?? this.dom\r\n\r\n        let w = document.createTreeWalker(\r\n            dom,\r\n            NodeFilter.SHOW_COMMENT)\r\n\r\n        var e\r\n        while(e = w.nextNode()) {\r\n            let id = w.currentNode.textContent\r\n            if (!id) continue\r\n\r\n            let fn = this.functions[id]\r\n            if (!fn) continue\r\n\r\n            let a = fn.call(ctx, ctx)\r\n            let content = a instanceof Template\r\n                ? a.content\r\n                : a instanceof HTMLElement\r\n                ? a\r\n                : Template.create(a).content\r\n            if (!content) continue\r\n\r\n            // remove nodes between marker tags\r\n            //\r\n            let endText = '\\\\' + id\r\n            var b\r\n            while(b = e.nextSibling) {\r\n                if (b.nodeType===8 && b.textContent===endText) {\r\n                    break\r\n                }\r\n                b.remove()\r\n            }\r\n            if (!e) continue\r\n\r\n            e.parentNode.insertBefore(content, e.nextSibling)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport let template = (strings, ...keys) => {\r\n    return new Template(strings, keys)\r\n}", "export let webCmp = (\r\n    tmpl,\r\n    {\r\n        formAssociated=true,\r\n\r\n        elements={}, // properties and events\r\n        connectedCallback=() => {}, // callback when loaded\r\n\r\n        attributes={}, // attribute changes\r\n        attributeChangedCallback=() => {}, // when attribute changed\r\n\r\n        properties={},  // for computed properties\r\n        ...overrides // other component overrides\r\n    } = {}\r\n) => {\r\n\r\n    let Cmp = class extends HTMLElement {\r\n\r\n        static formAssociated = formAssociated\r\n\r\n        constructor () {\r\n            super()\r\n            this.template = tmpl\r\n\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/ElementInternals\r\n            //\r\n            this.internals = this.attachInternals()\r\n\r\n            let dom = this.attachShadow({ mode:'open' })\r\n            dom.appendChild(tmpl.content.cloneNode(true))\r\n\r\n            attachElements(this, dom, elements)\r\n        }\r\n\r\n        static get observedAttributes() {\r\n            return Object.keys(attributes)\r\n        }\r\n        attributeChangedCallback(attr, oldVal, newVal) {\r\n            let f = attributes[attr]\r\n            if (f && typeof f ==='function') {\r\n                f.call(this, newVal, oldVal)\r\n            }\r\n            attributeChangedCallback.call(this, attr, oldVal, newVal)\r\n        }\r\n\r\n        // to be called to refresh content\r\n        //\r\n        refresh() {\r\n            this.template.refresh(this, this.shadowRoot)\r\n        }\r\n        connectedCallback() {\r\n            setTimeout(() => {\r\n                this.refresh()\r\n                connectedCallback.call(this)\r\n            })\r\n        }\r\n    }\r\n\r\n    let cls = Cmp.prototype\r\n    attachProperties(cls, properties)\r\n    attachProperties(cls, overrides)\r\n    return Cmp\r\n}\r\n\r\nlet attachElements = (cmp, dom, elems) => {\r\n\r\n    Object.entries(elems)\r\n    // collect element config\r\n    //\r\n    .reduce( (map, [k, f]) => {\r\n        let els = (k==='.' || k==='this')\r\n            ? [dom]\r\n            : dom.querySelectorAll(k)\r\n        if (!els.length===0) return map\r\n\r\n        els.forEach(el => {\r\n            let cfg = typeof(f)==='function'\r\n                ? f.call(cmp, el)\r\n                : {...f}\r\n\r\n            map.set(el, Object.assign(\r\n                map.get(el) || {},\r\n                cfg\r\n            ))\r\n        })\r\n\r\n        return map\r\n    }, new Map())\r\n\r\n    // apply config to each element\r\n    //\r\n    .forEach((cfg, el) => {\r\n        let id = cfg.id || el.id\r\n        delete cfg.id\r\n\r\n        if (id && el!==dom) {\r\n            if (cmp[id]) return\r\n            cmp[id] = el\r\n        }\r\n\r\n        // attach listeners/properties to element\r\n        // all functions' this refer to 'cmp'\r\n        //\r\n        Object.entries(cfg).forEach( ([evt, fn]) => {\r\n            let isFn = typeof fn==='function'\r\n\r\n            if (evt[0]=='$' && isFn) {\r\n                el.addEventListener(evt.slice(1), fn.bind(cmp))\r\n                return\r\n            }\r\n\r\n            el[evt] = isFn\r\n                ? fn.bind(cmp)\r\n                : fn // -- is a property\r\n        })\r\n    })\r\n}\r\n\r\n\r\nlet attachProperties = (cls, props) => {\r\n\r\n    Object.getOwnPropertyNames(props).forEach(n => {\r\n        let d = Object.getOwnPropertyDescriptor(props, n)\r\n\r\n        if (d.hasOwnProperty('value')) {\r\n            cls[n] = d.value\r\n        }\r\n        else if ('get' in d || 'set' in d) {\r\n            Object.defineProperty(cls, n, {\r\n                get: d.get,\r\n                set: d.set\r\n            })\r\n        }\r\n    })\r\n}\r\n", "\r\nexport let getCssText = (name) => {\r\n    let { cssRules } = Array.from(document.styleSheets)\r\n        .filter(a => a.href?.indexOf(name)>=0 )[0]\r\n        || {}\r\n\r\n    if (!cssRules) return ''\r\n\r\n    return Object.values(cssRules)\r\n        .map (r => r.cssText)\r\n        .join('\\n')\r\n}\r\n", "// utility functions for elemen\r\n//\r\nlet Fns = {\r\n\r\n    toggleClass: (el, cls) => {\r\n        let cs = el.classList\r\n        cs[cs.contains(cls) ? 'remove' : 'add'](cls)\r\n    },\r\n\r\n}\r\n\r\n// cache prototype\r\n//\r\nlet proto = Object.entries(Fns).reduce((proto, [name, fn]) => {\r\n    proto[name] = function() {\r\n        let e = this.el\r\n        if (!e) throw new Error('element undefined')\r\n\r\n        let a = fn.apply(\r\n            this,\r\n            [e].concat(Array.from(arguments)))\r\n        return a ?? this\r\n    }\r\n    return proto\r\n}, {})\r\n\r\n\r\nexport let El = (el) => Object.assign({...proto}, {el})\r\nObject.assign(El, Fns)\r\n\r\n"],
  "mappings": "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",
  "names": []
}
